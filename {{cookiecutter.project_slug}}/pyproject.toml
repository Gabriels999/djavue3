[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author_name}}"]
license = "{{cookiecutter.license}}"
readme = "README.md"
packages = [{include = "{{cookiecutter.project_slug}}"}]

[tool.poetry.dependencies]
python = "{{cookiecutter.python_version}}.x"
django = "^4.2.1"
asgiref = "^3.6.0"
sqlparse = "^0.4.4"
tzdata = "^2023.3"
django-extensions = "^3.2.1"
psycopg2 = "^2.9.6"
dj-database-url = "^2.0.0"
python-decouple = "^3.8"{% if cookiecutter.django_api == "ðŸ¥· django_ninja" %}
django-ninja = "^1.1.0"{% elif cookiecutter.django_api == "ðŸ“„ openapi" %}
django-connexion = "^0.0.2"
connexion = {extras = ["swagger-ui"], version = "^2.14.2"}{% endif %}{% if cookiecutter.deploy_to == "fly.io" %}
whitenoise = "^6.4.0"
gunicorn = "^20.1.0"{% endif %}

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pytest = "^7.3.1"
pytest-django = "^4.5.2"
ipython = "^8.17.1"
mock = "^5.1.0"
{% if cookiecutter.docker_usage == "ðŸ“¦ use venv npm by default" %}django-cors-headers = "^4.3.0"{% endif %}

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{cookiecutter.project_slug}}.{{cookiecutter.project_slug}}.settings"
pythonpath = [
  "./{{cookiecutter.project_slug}}"
]
addopts = "-x -vv"
filterwarnings = [
    "ignore::pytest.PytestCacheWarning",
    "ignore::UserWarning",
    "ignore:No directory at",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
create = true
in-project = true